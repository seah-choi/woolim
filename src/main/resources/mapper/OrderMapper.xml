<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">
<mapper namespace="org.fullstack4.woolim.mapper.OrderMapper">

    <insert id="DoOrder">
        INSERT INTO woo_order(member_id, order_date, order_total, order_name,order_cancel_yn,order_reg_date,order_status,order_refund_request,order_num)
        VALUES(#{member_id}
        , NOW()
        , #{order_total}
        , #{order_name}
        , 'N'
        , NOW()
        ,#{order_status}
        , 'N'
        ,#{order_num})
    </insert>

    <insert id="DoOrderDetail">
        INSERT INTO woo_order_detail(order_num,lecture_idx,order_status,order_detail_regDate,price,member_id)
        VALUES(#{order_num}, #{lecture_idx}, #{order_status}, NOW(), #{price},#{member_id})
    </insert>

    <insert id="Enrolment">
        INSERT INTO woo_class(member_id,lecture_idx)
        VALUES(#{member_id},#{lecture_idx})
    </insert>

    <insert id="InsertPayment">
        INSERT INTO woo_payment(payment_num,member_id,price,payment_reg_date,payment_type,payment_title)
        VALUES(#{payment_num},#{member_id},#{price},NOW(),#{payment_type},#{payment_title})
    </insert>

    <select id="GetPayment">
        select payment_idx,price,payment_reg_date,payment_type,payment_title,payment_reg_date
        from woo_payment
        <where>
            member_id=#{member_id}
            <if test="search_type != null and search_type != ''">
                <if test="search_type == '포인트 충전'.toString()">
                    and payment_title = '포인트 충전'
                </if>
                <if test="search_type == '포인트 사용'.toString()">
                    and payment_title = '포인트 사용'
                </if>
                <if test="search_type == '포인트 환불'.toString()">
                    and payment_title = '포인트 환불'
                </if>
            </if>
            <if test="search_date1 != null and search_date1 != 'null' and search_date1 != ''">
                and payment_reg_date >= #{search_date1}
            </if>
            <if test="search_date2 != null and search_date2 != 'null'  and search_date2 != ''">
                and payment_reg_date <![CDATA[<=]]> #{search_date2}
            </if>
        </where>
        ORDER by payment_idx DESC
        LIMIT #{page_skip_count}, #{page_size}

    </select>

    <select id="total_count" resultType="int">
        select count(*)
        from woo_payment
        <where>
            member_id=#{member_id}
            <if test="search_type != null and search_type != ''">
                <if test="search_type == '포인트 충전'.toString()">
                    and payment_title = '포인트 충전'
                </if>
                <if test="search_type == '포인트 사용'.toString()">
                and payment_title = '포인트 사용'
                </if>
                <if test="search_type == '포인트 환불'.toString()">
                and payment_title = '포인트 환불'
                </if>
            </if>
            <if test="search_date1 != null and search_date1 != 'null' and search_date1 != ''">
                and payment_reg_date >= #{search_date1}
            </if>
            <if test="search_date2 != null and search_date2 != 'null'  and search_date2 != ''">
                and payment_reg_date <![CDATA[<=]]> #{search_date2}
            </if>
        </where>
    </select>

    <select id="exist" resultType="int">
        SELECT count(*)
        FROM woo_order_detail
        WHERE lecture_idx=#{lecture_idx} AND member_id=#{member_id} AND order_status != '환불 완료'
    </select>

    <select id="exist2" resultType="int">
        SELECT count(*)
        FROM woo_class
        WHERE lecture_idx=#{lecture_idx} AND member_id=#{member_id}
    </select>

    <select id="viewOrderList" resultType="org.fullstack4.woolim.domain.OrderVO">
        SELECT order_idx,order_date,order_total,order_cancel_yn,member_id
               ,order_reg_date,order_status,order_refund_request,order_refund_response,order_num
        FROM woo_order
        <where>
            member_id =#{member_id}
            <if test="search_date1 != null and search_date1 != 'null' and search_date1 != ''">
                and payment_reg_date >= #{search_date1}
            </if>
            <if test="search_date2 != null and search_date2 != 'null'  and search_date2 != ''">
                and payment_reg_date <![CDATA[<=]]> #{search_date2}
            </if>
        </where>
        ORDER by order_idx DESC
        LIMIT #{page_skip_count}, #{page_size}


    </select>

    <select id="OrderCount" resultType="int">
        SELECT count(*)
        FROM woo_order
        <where>
            member_id =#{member_id}
            <if test="search_date1 != null and search_date1 != 'null' and search_date1 != ''">
                and payment_reg_date >= #{search_date1}
            </if>
            <if test="search_date2 != null and search_date2 != 'null'  and search_date2 != ''">
                and payment_reg_date <![CDATA[<=]]> #{search_date2}
            </if>
        </where>
    </select>

    <select id="viewOrderDetailList" resultType="org.fullstack4.woolim.domain.OrderDetailVO">
        SELECT WOD.lecture_idx,order_status,price,lecture_image,lecture_title,lecture_start_date,lecture_end_date,order_detail_idx
        FROM woo_order_detail as WOD
        INNER JOIN woo_lecture as WL ON WOD.lecture_idx = WL.lecture_idx
        <where>
            WOD.member_id = #{member_id}
            <if test="order_num != null and order_num !=''">
                AND order_num = #{order_num}
                ORDER by order_detail_idx DESC
            </if>
            <if test="order_num == null or order_num ==''">
                AND lecture_end_date >= NOW()
                AND lecture_start_date <![CDATA[<=]]> NOW()
                ORDER by lecture_end_date DESC
            </if>
        </where>
    </select>

    <update id="UpdateStatus">
        UPDATE woo_order_detail SET order_status=#{order_status}
        WHERE order_detail_idx =#{order_detail_idx}
    </update>

    <insert id="insertClass">
        INSERT INTO woo_class(member_id,lecture_idx) VALUES(#{member_id},#{lecture_idx})
    </insert>
</mapper>